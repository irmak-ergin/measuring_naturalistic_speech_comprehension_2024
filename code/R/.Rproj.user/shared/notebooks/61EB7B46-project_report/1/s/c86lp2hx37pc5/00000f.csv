"0","# Find trials that do not have a number right before .wav in the wav_file column "
"0","# (slowest condition)"
"0","attention_check_trials <- df.raw.merged %>%"
"0","  filter(!grepl(""x\\.wav$"", wav_file))"
"0",""
"0","# Calculate the accuracy"
"0","accuracy_results <- attention_check_trials %>%"
"0","  group_by(participant) %>%"
"0","  summarise("
"0","    accuracy = mean(multiple_choice_accuracy == 1, na.rm = TRUE),"
"0","    n = n()"
"0","  ) %>%"
"0","  mutate(passed = if_else(accuracy >= 0.75, TRUE, FALSE))"
"0",""
"0","# Print out participants who passed or failed"
"0","passed_participants <- accuracy_results %>%"
"0","  filter(passed) %>%"
"0","  pull(participant)"
"0",""
"0","failed_participants <- accuracy_results %>%"
"0","  filter(!passed) %>%"
"0","  pull(participant)"
"0",""
"0","if(length(passed_participants) > 0) {"
"0","  cat(paste(passed_participants, collapse = "", ""), "
"0","      ""passed the question accuracy criterion\n"")"
"0","}"
"1","p_1, p_2, p_3, p_4, p_5"
"1"," "
"1","passed the question accuracy criterion
"
"0","if(length(failed_participants) > 0) {"
"0","  cat(paste(failed_participants, collapse = "", ""), "
"0","      ""failed the question accuracy criterion\n"")"
"0","}"
