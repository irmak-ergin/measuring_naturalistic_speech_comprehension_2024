"0","# t-test "
"0",""
"0","# Create a vector to store results"
"0","rating_criteria_results <- character(length(participants))"
"0",""
"0","# Loop through each participant"
"0","for (i in seq_along(participants)) {"
"0","  part_id <- participants[i]"
"0","  "
"0","  # Subset data for the current participant for slowest and fastest speech rates"
"0","  subset_data <- df.raw.merged %>%"
"0","    filter(participant == part_id & (speech_rate == 1 | speech_rate == 4)) %>%"
"0","    select(likert_response, speech_rate)"
"0","  "
"0","  # Perform a t-test comparing likert_response for speech_rate 1 vs 4"
"0","  test_result <- t.test(likert_response ~ speech_rate, data = subset_data)"
"0","  "
"0","  # Check if the difference is significant (p-value < 0.05)"
"0","  if (test_result$p.value < 0.05) {"
"0","    rating_criteria_results[i] <- paste(part_id, ""passed the rating criterion"")"
"0","  } else {"
"0","    rating_criteria_results[i] <- paste(part_id, ""failed the rating criterion"")"
"0","  }"
"0","}"
"0",""
"0","# Print the results"
"0","cat(rating_criteria_results, sep = ""\n"")"
"1","p_1 passed the rating criterion"
"1","
"
"1","p_2 passed the rating criterion"
"1","
"
"1","p_3 passed the rating criterion"
"1","
"
"1","p_4 passed the rating criterion"
"1","
"
"1","p_5 passed the rating criterion"
"1","
"
