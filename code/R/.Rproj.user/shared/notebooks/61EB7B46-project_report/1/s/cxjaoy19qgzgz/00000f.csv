"0","# Create lists to keep track of participants who passed or failed"
"0","passed_summary_criterion <- c()"
"0","failed_summary_criterion <- c()"
"0",""
"0","for (part_id in participants) {"
"0","  # Extract rows for the current participant"
"0","  participant_data <- df.raw.merged[df.raw.merged$participant == part_id,]"
"0","  "
"0","  # Filter out NA values from summary_skipped column"
"0","  summary_skipped_non_na <- na.omit(participant_data$summary_skipped)"
"0","  "
"0","  # Check if all non-NA values are 1"
"0","  if(all(summary_skipped_non_na == 1)) {"
"0","    # All non-NA values are 1, so participant failed the summary criterion"
"0","    failed_summary_criterion <- c(failed_summary_criterion, part_id)"
"0","  } else {"
"0","    # There are values other than 1, so participant passed the summary criterion"
"0","    passed_summary_criterion <- c(passed_summary_criterion, part_id)"
"0","  }"
"0","}"
"0",""
"0","# Print "
"0","if(length(failed_summary_criterion) > 0) {"
"0","  cat(paste(failed_summary_criterion, collapse = "", ""), ""failed the summary criterion.\n"")"
"0","}"
"0",""
"0","if(length(passed_summary_criterion) > 0) {"
"0","  cat(paste(passed_summary_criterion, collapse = "", ""), ""passed the summary criterion.\n"")"
"0","}"
"1","p_1, p_2, p_3, p_4, p_5"
"1"," "
"1","passed the summary criterion.
"
