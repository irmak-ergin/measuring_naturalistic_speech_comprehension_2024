"0","# Exclude the first 8 trials for each speech_rate for each participant"
"0","df.filtered <- df.raw %>%"
"0","  group_by(participant, speech_rate) %>%"
"0","  mutate(trial_rank = row_number()) %>%"
"0","  filter(trial_rank > 8) %>%"
"0","  ungroup()"
"0",""
"0","# Calculate the average summary_duration for each speech_rate for each participant"
"0","df.avg <- df.filtered %>%"
"0","  group_by(participant, speech_rate) %>%"
"0","  summarise(average_duration = mean(summary_duration, na.rm = TRUE)) %>%"
"0","  ungroup() # Ensure speech_rate is treated as a factor"
"2","`summarise()` has grouped output by 'participant'. You can override using the `.groups` argument."
"0","df.avg$speech_rate <- as.factor(df.avg$speech_rate)"
"0",""
"0","# Create the faceted bar plot for each participant"
"0","ggplot(df.avg, aes(x = speech_rate, y = average_duration, fill = speech_rate)) +"
"0","  geom_bar(stat = ""identity"", color = ""black"") +"
"0","  facet_wrap(~ participant, scales = ""free_y"", nrow = 1) + # Adjust number of rows as needed"
"0","  scale_fill_brewer(palette = ""Pastel1"") + # Apply Pastel1 colors"
"0","  theme_classic() +"
"0","  labs(title = ""Average Summary Duration by Speech Rate for Each Participant "
"0","       (Excluding First 8 Trials)"","
"0","       x = ""Speech Rate"","
"0","       y = ""Average Summary Duration (second)"") +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1),"
"0","        legend.position = ""none"") "
