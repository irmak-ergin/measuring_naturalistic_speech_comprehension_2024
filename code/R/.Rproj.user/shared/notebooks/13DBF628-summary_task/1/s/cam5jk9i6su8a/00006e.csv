"0","df.twelf <- df.data %>%"
"0","  group_by(participant, speech_rate) %>%"
"0","  slice_sample(n = 12, replace = TRUE) %>%"
"0","  ungroup()"
"0",""
"0","# Calculate the average similarity per speech rate for each participant"
"0","avg_similarity_per_participant <- df.twelf %>%"
"0","  group_by(participant, speech_rate) %>%"
"0","  summarise(average_similarity = mean(sum_max_similarity, na.rm = TRUE), .groups = 'drop')"
"0",""
"0","# Calculate the overall average similarity per speech rate across all participants"
"0","overall_avg_similarity <- df.twelf %>%"
"0","  group_by(speech_rate) %>%"
"0","  summarise(participant = ""All"",  # Create an ""All"" participant category"
"0","            average_similarity = mean(sum_max_similarity, na.rm = TRUE), .groups = 'drop')"
"0",""
"0","# Combine the two datasets"
"0","combined_similarity <- bind_rows(avg_similarity_per_participant, overall_avg_similarity)"
"0",""
"0","# Ensure speech_rate and participant are treated as factors"
"0","combined_similarity$speech_rate <- factor(combined_similarity$speech_rate)"
"0","combined_similarity$participant <- factor(combined_similarity$participant, "
"0","                                          levels = c(""All"", unique(df.twelf$participant)))"
"0",""
"0","# Plot with facets for each participant including an ""All"" category"
"0","combined_similarity_plot <- ggplot(combined_similarity, aes(x = speech_rate, y = average_similarity, fill = speech_rate)) +"
"0","  geom_bar(stat = ""identity"", position = ""dodge"", fill = ""lightpink"") +"
"0","  facet_wrap(~ participant, ncol = 4) + # Assuming 3 participants + ""All"" category"
"0","  labs(x = ""Speech Rate"", y = ""Average Sum Max Similarity"","
"0","       title = ""Average Sum Max Similarity by Speech Rate and Participant"") +"
"0","  geom_text(aes(label = round(average_similarity, 2)), "
"0","            vjust = -0.3, position = position_dodge(width = 0.9), size = 3) +"
"0","  theme(legend.position = ""none"", "
"0","        strip.background = element_rect(fill = ""white"", color = ""black""),"
"0","        strip.text = element_text(face = ""bold""))"
"0",""
"0","# Display the plot"
"0","print(combined_similarity_plot)"
"0",""
