"0","# Add slider values"
"0",""
"0","# Find the slider values for each trial and save them to the df"
"0","participants <- unique(df.raw$participant)"
"0",""
"0","# Add a new column for slider values "
"0","if (!""slider_values"" %in% names(df.raw)) {"
"0","  df.raw$slider_values <- NA"
"0","}"
"0",""
"0","# Define a function to extract and return slider values as a string"
"0","get_slider_values <- function(wav_file_name, part_id) {"
"0","  # Extract the trial number from wav_file name"
"0","  matches <- regmatches(wav_file_name, regexec(""Someday_([0-9]+)"", wav_file_name))"
"0","  if (length(matches[[1]]) < 2) { # If no match or match does not have a capture group"
"0","    return(NA)"
"0","  }"
"0","  trial_number <- matches[[1]][2]"
"0",""
"0","  # Construct the path to the slider file"
"0","  slider_file_path <- sprintf(""%s/%s/slider_%s/*_%s_*.csv"", "
"0","                              organized_data_path, "
"0","                              part_id, part_id, "
"0","                              trial_number)"
"0",""
"0","  # Find slider files matching the pattern"
"0","  slider_files <- Sys.glob(slider_file_path)"
"0","  "
"0","  if (length(slider_files) == 0) {"
"0","    return(NA) # No matching file found"
"0","  }"
"0","  "
"0","  slider_data <- read.csv(slider_files[1], skip = 1)"
"0",""
"0","  if (""value"" %in% colnames(slider_data)) {"
"0","    # Concatenate slider values into a string"
"0","    return(paste(slider_data$value, collapse = "",""))"
"0","  } else {"
"0","    return(NA)"
"0","  }"
"0","}"
"0",""
"0","# Apply the function to each row of df.raw.merged"
"0","df.raw$slider_values <- mapply(get_slider_values, "
"0","                                      df.raw$wav_file, "
"0","                                      df.raw$participant)"
