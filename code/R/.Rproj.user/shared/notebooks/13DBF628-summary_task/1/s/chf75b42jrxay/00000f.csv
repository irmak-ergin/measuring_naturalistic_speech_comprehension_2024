"0","# Calculate the average summary_duration per speech_rate for each participant"
"0","avg_duration_per_speech_rate <- df.raw %>%"
"0","  group_by(participant, speech_rate) %>%"
"0","  summarise(average_summary_duration = mean(summary_duration, na.rm = TRUE)) %>%"
"0","  ungroup()"
"2","`summarise()` has grouped output by 'participant'. You can override using the `.groups` argument."
"0","# Ensure speech_rate and participant are treated as factors"
"0","avg_duration_per_speech_rate$speech_rate <- factor(avg_duration_per_speech_rate$speech_rate)"
"0","avg_duration_per_speech_rate$participant <- factor(avg_duration_per_speech_rate$participant)"
"0",""
"0","# Plot"
"0","ggplot(avg_duration_per_speech_rate, aes(x = speech_rate, y = average_summary_duration, fill = speech_rate)) +"
"0","  geom_bar(stat = ""identity"", position = position_dodge(width = 0.75)) +"
"0","  geom_text(aes(label = sprintf(""%.2f"", average_summary_duration)), "
"0","            position = position_dodge(width = 0.75), vjust = -0.25, color = ""black"", size = 3.5) +"
"0","  facet_wrap(~ participant, scales = ""free_y"", nrow = 1) +"
"0","  theme_classic() + "
"0","  labs(title = ""Average Summary Duration by Speech Rate for Each Participant"","
"0","       x = ""Speech Rate"","
"0","       y = ""Average Summary Duration (seconds)"") +"
"0","  scale_fill_brewer(palette = ""Pastel1"", type = ""qual"") +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1),"
"0","        legend.position = ""none"")"
