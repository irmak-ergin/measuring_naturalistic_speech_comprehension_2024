"0","# sanity check- per participant"
"0","# Directly create the unique identifier for each speech_rate-participant_id combination without converting to factors first"
"0","df.group <- df.raw %>%"
"0","  mutate(group_id = interaction(speech_rate, participant))%>%"
"0","  select(group_id, summary_duration)"
"0",""
"0","# Now split the dataframe into a list of dataframes based on the group_id"
"0","list_of_dfs <- split(df.group, f = df.group$group_id)"
"0",""
"0","# Iterate over each dataframe in the list to add the summary_median column"
"0","list_of_dfs_with_median <- lapply(list_of_dfs, function(df) {"
"0","  median_value <- median(df$summary_duration, na.rm = TRUE)  # Calculate the median of summary_duration"
"0","  df$summary_median <- median_value  # Add the median as a new column"
"0","  return(df)"
"0","})"
"0",""
"0","# Check the first dataframe in the list to confirm the summary_median column has been added"
"0","head(list_of_dfs_with_median[[18]])"
